// This is your Prisma schema file,

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String       @id @default(auto()) @map("_id") @db.ObjectId
  firstName           String
  lastName            String
  email               String       @unique
  password            String?
  forgotPasswordToken String?
  socialId            String?      @unique
  socialType          SocialTypes?
  status              Status       @default(ACTIVE)
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  deletedAt           DateTime?

  devices       Device[]
  notifications Notification[]
  Home          Home[]
  Skills        Skills?
  Technology    Technology[]

  @@map("users")
}

model Device {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  fcmToken  String?
  authToken String
  device    Devices
  metaData  Json?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  user      User      @relation(fields: [userId], references: [id])

  @@map("devices")
}

model AppleDetail {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  socialId  String   @unique
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("apple_details")
}

model Notification {
  id        String            @id @default(auto()) @map("_id") @db.ObjectId
  userId    String            @db.ObjectId
  title     String
  body      String
  data      Json?
  type      NotificationTypes
  readAt    DateTime?
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("notifications")
}

enum Devices {
  IOS
  ANDROID
  WEB
}

enum NotificationTypes {
  LoggedOut
}

enum SocialTypes {
  GOOGLE
  APPLE
}

enum Status {
  ACTIVE
  INACTIVE
}

model Home {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  userId      String    @unique @db.ObjectId
  designation String
  about       String
  button      String
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  user        User      @relation(fields: [userId], references: [id])

  @@map("homes")
}

model Technology {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  percentage String
  name       String
  image      Json
  color      String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  User       User?     @relation(fields: [userId], references: [id])
  userId     String?   @db.ObjectId
  Skills     Skills?   @relation(fields: [skillsId], references: [id])
  skillsId   String?   @db.ObjectId

  @@map("technologies")
}

model Skills {
  id                      String       @id @default(auto()) @map("_id") @db.ObjectId
  title                   String
  userId                  String       @unique @db.ObjectId
  years                   String
  yearsTitle              String
  satisfacationAbout      String
  satisfacationPercentage String
  about                   String
  updatedAt               DateTime     @updatedAt
  deletedAt               DateTime?
  user                    User         @relation(fields: [userId], references: [id])
  technology              Technology[]

  @@map("skills")
}
